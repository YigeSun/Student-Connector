{"ast":null,"code":"var _jsxFileName = \"/Users/yigesun/Desktop/DEVCONNECTOR/client/src/components/auth/Register.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  setAlert,\n  register,\n  isAuthenticated\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      });\n    }\n  };\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 29\n        }, this), \" Create Your Account\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: e => onSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Name\",\n            name: \"name\",\n            value: name,\n            onChange: e => onChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email Address\",\n            name: \"email\",\n            value: email,\n            onChange: e => onChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"form-text\",\n            children: \"This site uses Gravatar so if you want a profile image, use a Gravatar email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            name: \"password\",\n            value: password,\n            onChange: e => onChange(e),\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            name: \"password2\",\n            value: password2,\n            onChange: e => onChange(e),\n            minLength: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-1\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"3hJ28WhNsSNZOvQ62Ma0rIIF6+U=\");\n_c = Register;\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps, {\n  setAlert,\n  register\n})(Register);\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","Fragment","useState","connect","Link","Navigate","setAlert","register","PropTypes","jsxDEV","_jsxDEV","Register","isAuthenticated","_s","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","required","minLength","_c","propTypes","func","isRequired","bool","mapStateToProps","state","auth","$RefreshReg$"],"sources":["/Users/yigesun/Desktop/DEVCONNECTOR/client/src/components/auth/Register.js"],"sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { connect} from 'react-redux';\nimport { Link, Navigate } from 'react-router-dom';\nimport {setAlert} from '../../actions/alert';\nimport {register} from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2} = formData;\n\n  const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if(password !== password2){\n      setAlert('Passwords do not match', 'danger');\n    }else{\n      register({name, email, password});\n    }\n  }\n\n  if(isAuthenticated){\n    return <Navigate to='/dashboard' />;\n  }\n\n  return (\n    <section className=\"container\">\n      <Fragment>\n        <h1 className=\"large text-primary\">Sign Up</h1>\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n        <form className=\"form\" onSubmit = {e => onSubmit(e)}>\n          <div className=\"form-group\">\n            <input\n             type=\"text\" \n             placeholder=\"Name\" \n             name=\"name\" \n             value={name} \n             onChange={e => onChange(e)}\n             required />\n          </div>\n          <div className=\"form-group\">\n            <input\n             type=\"email\" \n             placeholder=\"Email Address\" \n             name=\"email\" \n             value={email} \n             onChange={e => onChange(e)} required />\n            <small className=\"form-text\"\n              >This site uses Gravatar so if you want a profile image, use a\n              Gravatar email</small\n            >\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              value={password} \n             onChange={e => onChange(e)}\n              minLength=\"6\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"password2\"\n              value={password2} \n             onChange={e => onChange(e)}\n              minLength=\"6\"\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n        </form>\n        <p className=\"my-1\">\n          Already have an account? <Link to=\"/login\">Sign In</Link>\n        </p>\n      </Fragment>\n    </section>\n  );\n};\n\nRegister.propTypes= {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {setAlert, register})(Register);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}